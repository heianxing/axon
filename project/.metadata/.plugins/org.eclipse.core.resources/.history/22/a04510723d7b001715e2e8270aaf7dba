package com.sundy.axon.unitofwork;

import java.util.List;

/**
 * 接口用于描述 一个监听器，UnitOfWOrk状态改变时将通知已注册的监听器
 * @author Administrator
 *
 */
public interface UnitOfWOrkListner {

	/**
	 * UnitOfWOrk提交后，该方法执行。聚合被保存，并且事件将被调度分发。
	 * 在某些情况下，事件可能已经被分发
	 * 当该方法出现执行异常时，工作单元会调用{@link #onRollback(UnitOfWork, Throwable)}
	 * @param unitOfWork 执行完提交的工作单元
	 */
	void afterCommit(UnitOfWork unitOfWork);
	
	void onRollback(UnitOfWork unitOfWork, Throwable failureCause);
	
	<T> EventMessage<T> onEventRegistered(UnitOfWork unitOfWork, EventMessage<T> event);
	
	void onPrepareCommit(UnitOfWork unitOfWork, Set<AggregateRoot> aggregateRoots, List<EventMessage> events);
	
	void onPrepareTransactionCommit(UnitOfWork unitOfWork, Object transaction);
	
	void onCleanup(UnitOfWork unitOfWork);
}
