package com.sundy.axon.cache;

import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;

public abstract class AbstractCacheAdapter<L> implements Cache {

	private final ConcurrentMap<EntryListener, L> registeredAdapters = new ConcurrentHashMap<EntryListener, L>();
	
	public <K, V> V get(K key) {
		// TODO Auto-generated method stub
		return null;
	}

	public <K, V> void put(K key, V value) {
		// TODO Auto-generated method stub

	}

	public <K, V> boolean putIfAbsent(K key, V value) {
		// TODO Auto-generated method stub
		return false;
	}

	public <K> boolean containsKey(K key) {
		// TODO Auto-generated method stub
		return false;
	}

	public void registerCacheEntryListener(EntryListener cacheEntryListener) {
		// TODO Auto-generated method stub

	}

	public void unregisterCacheEntryListener(EntryListener cacheEntryListener) {
		// TODO Auto-generated method stub

	}

}
