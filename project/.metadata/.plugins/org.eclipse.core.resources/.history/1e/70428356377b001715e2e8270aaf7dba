package com.sundy.axon.unitofwork;

public interface UnitOfWork {

	void commit();
	
	void rollback();
	
	void start();
	
	boolean isStarted();
	
	boolean isTransactional();
	
	void registerListener(UnitOfWOrkListner listener);
	
	<T extends Aggregate> T registerAggregate(T aggregateRoot, EventBus eventBus, SaveAggregateCallback<T> saveAggregateCallback);
	
	void publishEvent(EventMessage<?> event, EventBus eventBus);
	
	void attachResource(String name, Object resource);
	
	void attachResource(String name, Object resource, boolean inherited);
	
	<T> T getResource(String name);
	
	void attachInheritedResources(UnitOfWork inheritingUnitOfWork);
	
}
